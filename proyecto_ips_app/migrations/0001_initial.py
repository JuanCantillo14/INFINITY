# Generated by Django 5.2.3 on 2025-06-23 17:33

import datetime
import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import proyecto_ips_app.models.agenda
import proyecto_ips_app.models.usuario
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True, validators=[django.core.validators.RegexValidator(message='El campo username solo puede contener letras, números y los caracteres @/./+/-/_', regex='^[\\w.@+-]+$')], verbose_name='Username')),
                ('rol', models.CharField(choices=[('MED', 'Medico'), ('PAC', 'Paciente'), ('AUX', 'AuxAdministrativo')], default='PAC', max_length=20, verbose_name='Rol en la empresa')),
                ('first_name', models.CharField(max_length=100, validators=[proyecto_ips_app.models.usuario.validar_caracter, django.core.validators.MinLengthValidator(3, message='El campo debe contener minimo 3 caracteres')], verbose_name='Nombres')),
                ('last_name', models.CharField(max_length=100, validators=[proyecto_ips_app.models.usuario.validar_caracter, django.core.validators.MinLengthValidator(5, message='El campo debe contener minimo 5 caracteres')], verbose_name='Apellidos')),
                ('email', models.EmailField(max_length=100, unique=True, validators=[django.core.validators.EmailValidator(message='Correo electrónico inválido')], verbose_name='Correo electrónico')),
                ('telefono', models.CharField(default='300437243', max_length=10, validators=[proyecto_ips_app.models.usuario.validar_telefono], verbose_name='Número de telefono')),
                ('tipo_doc', models.CharField(choices=[('CC', 'Cedula de Ciudadania'), ('CE', 'Cedula de Extranjeria'), ('TI', 'Tarjeta de Identidad'), ('RC', 'Registro Civil')], default='CC', max_length=2, verbose_name='Tipo de documento')),
                ('documento', models.IntegerField(unique=True, validators=[django.core.validators.RegexValidator(message='El número de documento no es válido', regex='^\\d{4,10}')], verbose_name='Número de documento')),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('I', 'Indefinido')], default='M', max_length=1, verbose_name='Genero')),
                ('fecha_nacimiento', models.DateField(default=django.utils.timezone.now, validators=[django.core.validators.MaxValueValidator(datetime.date.today)], verbose_name='Fecha de nacimiento')),
                ('direccion', models.CharField(default='Calle 23 A SUR', max_length=100, verbose_name='Dirección de residencia')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to=proyecto_ips_app.models.usuario.user_directory_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Imagen de Usuario')),
                ('password', models.CharField(max_length=100, verbose_name='Contraseña')),
                ('groups', models.ManyToManyField(blank=True, related_name='usuario_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='usuario_permisos_set', to='auth.permission')),
            ],
            options={
                'db_table': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('codigo_municipio', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True, verbose_name='Código del Municipio')),
                ('nombre_ciudad', models.CharField(max_length=255, verbose_name='Nombre de la Ciudad')),
            ],
            options={
                'db_table': 'ciudad',
            },
        ),
        migrations.CreateModel(
            name='Consultorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('piso', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3')], max_length=4, verbose_name='Piso')),
                ('num_habitacion', models.PositiveIntegerField(verbose_name='Número de habitación')),
            ],
            options={
                'db_table': 'consultorio_medico',
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('codigo_departamento', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True, verbose_name='Código del departamento')),
                ('nombre_departamento', models.CharField(max_length=255, unique=True, verbose_name='Nombre del departamento')),
            ],
            options={
                'db_table': 'departamento',
            },
        ),
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_especialidad', models.CharField(max_length=200, verbose_name='Nombre de la especialidad')),
                ('descripcion', models.TextField(verbose_name='Descripción de la especialidad')),
            ],
            options={
                'db_table': 'especialidad',
            },
        ),
        migrations.CreateModel(
            name='EstadoCita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_estado', models.CharField(choices=[('PROGRAMADA', 'Programada'), ('CANCELADA', 'Cancelada'), ('FINALIZADA', 'Finalizada')], max_length=20, verbose_name='Estado de la Cita')),
                ('descripcion', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'db_table': 'estado_cita',
            },
        ),
        migrations.CreateModel(
            name='GrupoIngresos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel_ingresos', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C')], max_length=5, verbose_name='Grupo de ingresos')),
                ('valor', models.FloatField(verbose_name='Valor cuota moderadora')),
                ('descripcion', models.CharField(blank=True, max_length=250, verbose_name='Descripción')),
            ],
            options={
                'db_table': 'grupo_ingresos',
            },
        ),
        migrations.CreateModel(
            name='AuxAdmin',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'aux_admin',
            },
            bases=('proyecto_ips_app.usuario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='usuario',
            name='ciudad',
            field=models.ForeignKey(blank=True, max_length=100, null=True, on_delete=django.db.models.deletion.SET_NULL, to='proyecto_ips_app.ciudad', verbose_name='Ciudad de residencia'),
        ),
        migrations.AddField(
            model_name='ciudad',
            name='codigo_departamento',
            field=models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, to='proyecto_ips_app.departamento', verbose_name='Departamento'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='departamento',
            field=models.ForeignKey(blank=True, max_length=100, null=True, on_delete=django.db.models.deletion.SET_NULL, to='proyecto_ips_app.departamento', verbose_name='Departamento de residencia'),
        ),
        migrations.CreateModel(
            name='LugarAtencion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_lugar', models.CharField(max_length=255, verbose_name='Lugar de Atención')),
                ('direccion_lugar', models.CharField(max_length=255, verbose_name='Dirección del lugar de atención')),
                ('ciudad', models.ForeignKey(max_length=200, null=True, on_delete=django.db.models.deletion.SET_NULL, to='proyecto_ips_app.ciudad', verbose_name='Ciudad')),
                ('departamento', models.ForeignKey(max_length=200, null=True, on_delete=django.db.models.deletion.SET_NULL, to='proyecto_ips_app.departamento', verbose_name='Departamento')),
            ],
            options={
                'db_table': 'lugar_atencion',
            },
        ),
        migrations.CreateModel(
            name='Medico',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('tarjeta_profesional', models.CharField(db_index=True, max_length=15, unique=True, verbose_name='Número de tarjeta profesional')),
                ('consultorio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='proyecto_ips_app.consultorio', verbose_name='Consultorio')),
                ('especializacion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='proyecto_ips_app.especialidad', verbose_name='Especialidad')),
            ],
            options={
                'db_table': 'medico',
            },
            bases=('proyecto_ips_app.usuario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(help_text='Seleccione una fecha para la agenda', validators=[proyecto_ips_app.models.agenda.validar_dia])),
                ('hora_inicio', models.TimeField(help_text='Seleccione un horario')),
                ('hora_fin', models.TimeField(help_text='Seleccione un horario')),
                ('fecha_creacion', models.DateTimeField()),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proyecto_ips_app.medico', verbose_name='Agenda Médica')),
            ],
            options={
                'db_table': 'agenda',
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('tipo_regimen', models.CharField(choices=[('C', 'Cotizante'), ('B', 'Beneficiario'), ('A', 'Adicional'), ('N/A', 'No aplica')], max_length=20, verbose_name='Tipo de regimen')),
                ('ocupacion', models.CharField(blank=True, max_length=100, verbose_name='Ocupación')),
                ('eps', models.CharField(choices=[('SURA', 'Sura'), ('COMPENSAR', 'Compensar'), ('SANITAS', 'Sanitas'), ('NUEVA EPS', 'Nueva EPS'), ('COOSALUD', 'Coosalud'), ('FAMISANAR', 'Famisanar')], max_length=20)),
                ('grupo_ingresos', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='proyecto_ips_app.grupoingresos', verbose_name='Grupo de Ingresos')),
            ],
            options={
                'db_table': 'paciente',
            },
            bases=('proyecto_ips_app.usuario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CitaMedica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('hora', models.CharField(choices=[('07:00', '07:00'), ('07:20', '07:20'), ('07:40', '07:40'), ('08:00', '08:00'), ('08:20', '08:20'), ('08:40', '08:40'), ('09:00', '09:00'), ('09:20', '09:20'), ('09:40', '09:40'), ('10:00', '10:00'), ('10:20', '10:20'), ('10:40', '10:40'), ('11:00', '11:00'), ('11:20', '11:20'), ('11:40', '11:40'), ('12:00', '12:00'), ('12:20', '12:20'), ('12:40', '12:40'), ('13:00', '13:00'), ('13:20', '13:20'), ('13:40', '13:40'), ('14:00', '14:00'), ('14:20', '14:20'), ('14:40', '14:40')], max_length=5)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmada', 'Confirmada'), ('cancelada', 'Cancelada'), ('realizada', 'Realizada')], default='pendiente', max_length=20)),
                ('lugar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proyecto_ips_app.lugaratencion')),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proyecto_ips_app.medico')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proyecto_ips_app.paciente')),
            ],
            options={
                'db_table': 'cita_medica',
                'unique_together': {('fecha', 'hora', 'medico')},
            },
        ),
    ]
