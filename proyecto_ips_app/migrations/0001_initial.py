# Generated by Django 5.2.3 on 2025-06-26 15:18

import datetime
import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import proyecto_ips_app.models.agenda
import proyecto_ips_app.models.usuario
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True, validators=[django.core.validators.RegexValidator(message='El campo username solo puede contener letras, números y los caracteres @/./+/-/_', regex='^[\\w.@+-]+$')], verbose_name='Username')),
                ('rol', models.CharField(choices=[('MED', 'Medico'), ('PAC', 'Paciente'), ('AUX', 'AuxAdministrativo')], default='PAC', max_length=20, verbose_name='Rol en la empresa')),
                ('first_name', models.CharField(max_length=100, validators=[proyecto_ips_app.models.usuario.validar_caracter, django.core.validators.MinLengthValidator(3, message='El campo debe contener minimo 3 caracteres')], verbose_name='Nombres')),
                ('last_name', models.CharField(max_length=100, validators=[proyecto_ips_app.models.usuario.validar_caracter, django.core.validators.MinLengthValidator(5, message='El campo debe contener minimo 5 caracteres')], verbose_name='Apellidos')),
                ('email', models.EmailField(max_length=100, unique=True, validators=[django.core.validators.EmailValidator(message='Correo electrónico inválido')], verbose_name='Correo electrónico')),
                ('telefono', models.CharField(default='300437243', max_length=10, validators=[proyecto_ips_app.models.usuario.validar_telefono], verbose_name='Número de telefono')),
                ('tipo_doc', models.CharField(choices=[('CC', 'Cedula de Ciudadania'), ('CE', 'Cedula de Extranjeria'), ('TI', 'Tarjeta de Identidad'), ('RC', 'Registro Civil')], default='CC', max_length=2, verbose_name='Tipo de documento')),
                ('documento', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='El número de documento no es válido', regex='^\\d{4,10}')], verbose_name='Número de documento')),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('I', 'Indefinido')], default='M', max_length=1, verbose_name='Genero')),
                ('fecha_nacimiento', models.DateField(default=django.utils.timezone.now, validators=[django.core.validators.MaxValueValidator(datetime.date.today)], verbose_name='Fecha de nacimiento')),
                ('direccion', models.CharField(default='Calle 23 A SUR', max_length=100, verbose_name='Dirección de residencia')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to=proyecto_ips_app.models.usuario.user_directory_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Imagen de Usuario')),
                ('password', models.CharField(max_length=100, verbose_name='Contraseña')),
                ('groups', models.ManyToManyField(blank=True, related_name='usuario_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='usuario_permisos_set', to='auth.permission')),
            ],
            options={
                'db_table': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField(validators=[proyecto_ips_app.models.agenda.validar_dia])),
                ('fecha_fin', models.DateField(blank=True, null=True, validators=[proyecto_ips_app.models.agenda.validar_dia])),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('horas_por_dia', models.PositiveSmallIntegerField(default=6)),
            ],
            options={
                'verbose_name': 'Agenda semanal',
                'db_table': 'agenda',
            },
        ),
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('codigo_municipio', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True, verbose_name='Código del Municipio')),
                ('nombre_ciudad', models.CharField(max_length=255, verbose_name='Nombre de la Ciudad')),
            ],
            options={
                'db_table': 'ciudad',
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('codigo_departamento', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True, verbose_name='Código del departamento')),
                ('nombre_departamento', models.CharField(max_length=255, unique=True, verbose_name='Nombre del departamento')),
            ],
            options={
                'db_table': 'departamento',
            },
        ),
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_especialidad', models.CharField(max_length=200, verbose_name='Nombre de la especialidad')),
                ('descripcion', models.TextField(verbose_name='Descripción de la especialidad')),
            ],
            options={
                'db_table': 'especialidad',
            },
        ),
        migrations.CreateModel(
            name='EstadoCita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_estado', models.CharField(choices=[('PROGRAMADA', 'Programada'), ('CANCELADA', 'Cancelada'), ('FINALIZADA', 'Finalizada')], max_length=20, verbose_name='Estado de la Cita')),
                ('descripcion', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'db_table': 'estado_cita',
            },
        ),
        migrations.CreateModel(
            name='AuxAdmin',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'aux_admin',
            },
            bases=('proyecto_ips_app.usuario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('tipo_regimen', models.CharField(choices=[('CONTR', 'Contributivo'), ('SUB', 'Subsidiado'), ('N/A', 'No aplica')], max_length=20, verbose_name='Tipo de regimen')),
                ('ocupacion', models.CharField(blank=True, max_length=100, verbose_name='Ocupación')),
                ('eps', models.CharField(choices=[('SURA', 'Sura'), ('COMPENSAR', 'Compensar'), ('SANITAS', 'Sanitas'), ('NUEVA EPS', 'Nueva EPS'), ('COOSALUD', 'Coosalud'), ('FAMISANAR', 'Famisanar')], max_length=20)),
            ],
            options={
                'db_table': 'paciente',
            },
            bases=('proyecto_ips_app.usuario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='usuario',
            name='ciudad',
            field=models.ForeignKey(blank=True, max_length=100, null=True, on_delete=django.db.models.deletion.SET_NULL, to='proyecto_ips_app.ciudad', verbose_name='Ciudad de residencia'),
        ),
        migrations.AddField(
            model_name='ciudad',
            name='codigo_departamento',
            field=models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, to='proyecto_ips_app.departamento', verbose_name='Departamento'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='departamento',
            field=models.ForeignKey(blank=True, max_length=100, null=True, on_delete=django.db.models.deletion.SET_NULL, to='proyecto_ips_app.departamento', verbose_name='Departamento de residencia'),
        ),
        migrations.CreateModel(
            name='LugarAtencion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_lugar', models.CharField(max_length=255, unique=True, verbose_name='Lugar de Atención')),
                ('direccion_lugar', models.CharField(max_length=255, verbose_name='Dirección del lugar de atención')),
                ('ciudad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='proyecto_ips_app.ciudad')),
                ('departamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='proyecto_ips_app.departamento')),
            ],
            options={
                'db_table': 'lugar_atencion',
            },
        ),
        migrations.CreateModel(
            name='SlotCita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('disponible', models.BooleanField(default=True)),
                ('agenda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='proyecto_ips_app.agenda')),
            ],
            options={
                'db_table': 'slot_cita',
            },
        ),
        migrations.CreateModel(
            name='Medico',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('tarjeta_profesional', models.CharField(db_index=True, max_length=15, unique=True, verbose_name='Número de tarjeta profesional')),
                ('especializacion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='proyecto_ips_app.especialidad', verbose_name='Especialidad')),
            ],
            options={
                'db_table': 'medico',
            },
            bases=('proyecto_ips_app.usuario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='agenda',
            name='medico',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proyecto_ips_app.medico'),
        ),
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('hora', models.TimeField()),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('CONFIRMADA', 'Confirmada'), ('CANCELADA', 'Cancelada'), ('ATENDIDA', 'Atendida')], default='PENDIENTE', max_length=10)),
                ('lugar_atencion', models.CharField(blank=True, default='Asistir Salud LTDA', max_length=100, null=True)),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas_como_medico', to=settings.AUTH_USER_MODEL)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas_como_paciente', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'cita',
                'unique_together': {('medico', 'fecha', 'hora')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='agenda',
            unique_together={('medico', 'fecha_inicio')},
        ),
    ]
